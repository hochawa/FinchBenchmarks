SparseList{Separate}{SparseList} representation:

5x5_falses: Bool[0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{false, Bool, Int64, Vector{Bool}}}[]), 5, [1, 1], Int64[]))
countstored: 0
5x5_trues: Bool[1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{false, Bool, Int64, Vector{Bool}}}[SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1, 1], Int64[])]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 5
4x4_one_bool: Bool[0 0 0 1; 0 0 0 0; 1 0 0 0; 0 1 0 0]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 4, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{false, Bool, Int64, Vector{Bool}}}[SparseList{Int64}(Element{false, Bool, Int64}(Bool[1]), 4, [1, 2], [3]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1]), 4, [1, 2], [4]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1]), 4, [1, 2], [1]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 4, [1, 1], Int64[])]), 4, [1, 4], [1, 2, 4]))
countstored: 3
5x4_bool_mix: Bool[0 1 0 1; 0 0 0 0; 1 1 1 1; 1 1 1 1; 0 1 0 1]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{false, Bool, Int64}(Bool[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{false, Bool, Int64, Vector{Bool}}}[SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1]), 5, [1, 3], [3, 4]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1]), 5, [1, 5], [1, 3, 4, 5]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1]), 5, [1, 3], [3, 4]), SparseList{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1]), 5, [1, 5], [1, 3, 4, 5])]), 4, [1, 5], [1, 2, 3, 4]))
countstored: 4
5x5_zeros: [0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{0.0, Float64, Int64, Vector{Float64}}}[]), 5, [1, 1], Int64[]))
countstored: 0
5x5_ones: [1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{0.0, Float64, Int64, Vector{Float64}}}[SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5, [1, 6], [1, 2, 3, 4, 5]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[])]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 5
5x5_float_mix: [0.0 1.0 2.0 2.0 3.0; 0.0 0.0 0.0 0.0 0.0; 1.0 1.0 2.0 0.0 0.0; 0.0 0.0 0.0 3.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseList{Int64}(Separate(SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1], Int64[]), SparseListLevel{Int64, Vector{Int64}, Vector{Int64}, ElementLevel{0.0, Float64, Int64, Vector{Float64}}}[SparseList{Int64}(Element{0.0, Float64, Int64}([1.0]), 5, [1, 2], [3]), SparseList{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0]), 5, [1, 3], [1, 3]), SparseList{Int64}(Element{0.0, Float64, Int64}([2.0, 2.0]), 5, [1, 3], [1, 3]), SparseList{Int64}(Element{0.0, Float64, Int64}([2.0, 3.0]), 5, [1, 3], [1, 4]), SparseList{Int64}(Element{0.0, Float64, Int64}([3.0]), 5, [1, 2], [1]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[]), SparseList{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5, [1, 1], Int64[])]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 5

