SparseRunList{Dense} representation:

5x5_falses: Bool[0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{false, Bool, Int64}(Bool[]), 5), 5, [1, 1], Int64[], Int64[], Dense{Int64}(Element{false, Bool, Int64}(Bool[]), 5); merge =true))
countstored: 0
5x5_trues: Bool[1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{false, Bool, Int64}(Bool[1, 1, 1, 1, 1]), 5), 5, [1, 2], [1], [5], Dense{Int64}(Element{false, Bool, Int64}(Bool[]), 5); merge =true))
countstored: 5
4x4_one_bool: Bool[0 0 0 1; 0 0 0 0; 1 0 0 0; 0 1 0 0]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{false, Bool, Int64}(Bool[0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]), 4), 4, [1, 4], [1, 2, 4], [1, 2, 4], Dense{Int64}(Element{false, Bool, Int64}(Bool[]), 4); merge =true))
countstored: 12
5x4_bool_mix: Bool[0 1 0 1; 0 0 0 0; 1 1 1 1; 1 1 1 1; 0 1 0 1]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{false, Bool, Int64}(Bool[0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1]), 5), 4, [1, 5], [1, 2, 3, 4], [1, 2, 3, 4], Dense{Int64}(Element{false, Bool, Int64}(Bool[]), 5); merge =true))
countstored: 20
5x5_zeros: [0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5), 5, [1, 1], Int64[], Int64[], Dense{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5); merge =true))
countstored: 0
5x5_ones: [1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{0.0, Float64, Int64}([1.0, 1.0, 1.0, 1.0, 1.0]), 5), 5, [1, 2], [1], [5], Dense{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5); merge =true))
countstored: 5
5x5_float_mix: [0.0 1.0 2.0 2.0 3.0; 0.0 0.0 0.0 0.0 0.0; 1.0 1.0 2.0 0.0 0.0; 0.0 0.0 0.0 3.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseRunList{Int64}(Dense{Int64}(Element{0.0, Float64, Int64}([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 3.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0]), 5), 5, [1, 6], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], Dense{Int64}(Element{0.0, Float64, Int64}(Float64[]), 5); merge =true))
countstored: 25

