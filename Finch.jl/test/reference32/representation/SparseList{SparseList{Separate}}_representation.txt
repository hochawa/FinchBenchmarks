SparseList{SparseList{Separate}} representation:

5x5_falses: Bool[0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{false, Bool, Int32}(Bool[]), ElementLevel{false, Bool, Int32, Vector{Bool}}[]), 5, [1], Int32[]), 5, [1, 1], Int32[]))
countstored: 0
5x5_trues: Bool[1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1; 1 1 1 1 1]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{false, Bool, Int32}(Bool[]), ElementLevel{false, Bool, Int32, Vector{Bool}}[Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0])]), 5, [1, 6, 11, 16, 21, 26], [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 25
4x4_one_bool: Bool[0 0 0 1; 0 0 0 0; 1 0 0 0; 0 1 0 0]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{false, Bool, Int32}(Bool[]), ElementLevel{false, Bool, Int32, Vector{Bool}}[Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[0])]), 4, [1, 2, 3, 4], [3, 4, 1]), 4, [1, 4], [1, 2, 4]))
countstored: 3
5x4_bool_mix: Bool[0 1 0 1; 0 0 0 0; 1 1 1 1; 1 1 1 1; 0 1 0 1]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{false, Bool, Int32}(Bool[]), ElementLevel{false, Bool, Int32, Vector{Bool}}[Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[1]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0]), Element{false, Bool, Int32}(Bool[0])]), 5, [1, 3, 7, 9, 13], [3, 4, 1, 3, 4, 5, 3, 4, 1, 3, 4, 5]), 4, [1, 5], [1, 2, 3, 4]))
countstored: 12
5x5_zeros: [0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{0.0, Float64, Int32}(Float64[]), ElementLevel{0.0, Float64, Int32, Vector{Float64}}[]), 5, [1], Int32[]), 5, [1, 1], Int32[]))
countstored: 0
5x5_ones: [1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0; 1.0 1.0 1.0 1.0 1.0]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{0.0, Float64, Int32}(Float64[]), ElementLevel{0.0, Float64, Int32, Vector{Float64}}[Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0]), Element{0.0, Float64, Int32}([0.0])]), 5, [1, 6, 11, 16, 21, 26], [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 25
5x5_float_mix: [0.0 1.0 2.0 2.0 3.0; 0.0 0.0 0.0 0.0 0.0; 1.0 1.0 2.0 0.0 0.0; 0.0 0.0 0.0 3.0 0.0; 0.0 0.0 0.0 0.0 0.0]
tensor: Tensor(SparseList{Int32}(SparseList{Int32}(Separate(Element{0.0, Float64, Int32}(Float64[]), ElementLevel{0.0, Float64, Int32, Vector{Float64}}[Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([1.0]), Element{0.0, Float64, Int32}([2.0]), Element{0.0, Float64, Int32}([2.0]), Element{0.0, Float64, Int32}([2.0]), Element{0.0, Float64, Int32}([3.0]), Element{0.0, Float64, Int32}([3.0])]), 5, [1, 2, 4, 6, 8, 9], [3, 1, 3, 1, 3, 1, 4, 1]), 5, [1, 6], [1, 2, 3, 4, 5]))
countstored: 8

